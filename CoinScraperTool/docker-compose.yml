services:
  # PostgreSQL DB(storing data)
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "5435:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis (celery message broker managing task queue messaging)
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6385:6379"
    volumes:
      - redis_data:/data

  # Django Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: CoinScraperTool
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  # Celery Worker (Executes async/background tasks)
  celery:
    build: .
    container_name: celery-Worker
    command: celery -A Coinlytics worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
